// Searching weight of arc
scp_program -> proc_find_weight_of_graph (*	
	-> rrel_params: ... (*
		-> rrel_1: rrel_in: _begin_vertex;;
		-> rrel_2: rrel_in: _next_vertex;;
		-> rrel_3: rrel_out: _length;;
	*);;

	-> rrel_operators: ... (*
		// initializaztion and assigning of _length
		-> rrel_init: ..initialize (*
			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _length;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [0];;
			=> nrel_goto: ..get_all_nodes;;
		*);;

		// Getting all sc-variables that incident _begin_vertex
		-> ..get_all_nodes (*
			<- searchSetStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _begin_vertex;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _neccesary_arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _next_vertex;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_common: _arc2;;
			-> rrel_5: rrel_assign: rrel_scp_var: _weight;;
			-> rrel_set_5: rrel_assign: rrel_scp_var: _all_nodes;;
			=> nrel_then: ..get_node;;
			=> nrel_else: ..return;;
		*);;

		// Getting incidental sc-variable
		-> ..get_node (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _all_nodes;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _deleted_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _weight;;
			=> nrel_then: ..delete_arc;; 
			=> nrel_else: ..return;;
		*);;

		// Removing incidental variable from _all_nodes
		-> ..delete_arc (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _deleted_arc;;
			=> nrel_goto: ..if_weight;;
		*);;

		// Checking if _weight has system system identifier
		// If _weight has system identifier, its weight, either fake weight
		-> ..if_weight (*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _weight;;
			-> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _weight_value;;
			-> rrel_4: rrel_assign: rrel_pos: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_system_identifier;;
			=> nrel_then: ..temp;;		
		 	=> nrel_else: ..get_node;;
		*);;

		// Creating _temp sc-variable (analog of  _length += _weight_value)
		-> ..temp (*
			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _length;;
			=> nrel_goto: ..sum;;
		*);;


		-> ..sum (*
			<- contAdd;;
			-> rrel_1: rrel_assign: rrel_scp_var: _length;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _temp;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _weight_value;;
			=> nrel_goto: ..return;;
		*);;


		-> ..return (*
			<- return;;
		*);;
	*);;
*);;