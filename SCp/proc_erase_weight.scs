// Removes arc between _begin_vertex and _next_vertex so we could add new with weight
scp_program -> proc_erase_weight (*	
	-> rrel_params: ... (*
		-> rrel_1: rrel_in: _begin_vertex;;
		-> rrel_2: rrel_in: _next_vertex;;
		-> rrel_3: rrel_out: _length;;
	*);;

	-> rrel_operators: ... (*
		// initializing _length variable
		-> rrel_init: ..initialize (*
			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _length;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [0];;
			=> nrel_goto: ..get_all_nodes;;
		*);;

		-> ..get_all_nodes (*
			<- searchSetStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _begin_vertex;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _neccesary_arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _next_vertex;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_common: _arc2;;
			-> rrel_5: rrel_assign: rrel_scp_var: _weight;;
			-> rrel_set_5: rrel_assign: rrel_scp_var: _all_nodes;;
			=> nrel_then: ..get_node;;
			=> nrel_else: ..return;;
		*);;


		-> ..get_node (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _all_nodes;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _deleted_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _weight;;
			=> nrel_then: ..delete_arc;; 
			=> nrel_else: ..return;;
		*);;

		-> ..delete_arc (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _deleted_arc;;
			=> nrel_goto: ..if_weight;;
		*);;


		-> ..if_weight (*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _weight;;
			-> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _weight_value;;
			-> rrel_4: rrel_assign: rrel_pos: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_system_identifier;;
			=> nrel_then: ..temp;;		
		 	=> nrel_else: ..get_node;;
		*);;

		
		-> ..temp (*
            <- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _begin_vertex;;
			-> rrel_2: rrel_assign: rrel_scp_var: arc_between_vertexes;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _next_vertex;;
			=> nrel_goto:..find_from_arc_to_weight;;
		*);;

        ->..find_from_arc_to_weight(*
            <- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _weight;;
			-> rrel_2: rrel_assign: rrel_scp_var: arc_between_vertexe;;
			-> rrel_3: rrel_fixed: rrel_scp_var: arc_between_vertexes;;
			=> nrel_goto:..erase_arc;;
        *);;

		// Erasing arc between weight value and arc from _begin_vertex to _next_vertex
        ->..erase_arc(*
            <- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: arc_between_vertexe;;
			=> nrel_goto: ..erase_arc_1;;
        *);;

		// Erasing arc between _begin_vertex and _next_vertex
        ->..erase_arc_1(*
            <- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: arc_between_vertexes;;
			=> nrel_goto: ..return;;
        *);;

		-> ..return (*
			<- return;;
		*);;
	*);;
*);;